#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright Â© 2012-2013 Martin Ueding <dev@martin-ueding.de>

###############################################################################
#                                   License                                   #
###############################################################################
# This file is part of copyright updater.
#
# copyright updater is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 2 of the License, or (at your option)
# any later version.
#
# copyright updater is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# copyright updater.  If not, see <http://www.gnu.org/licenses/>.

"""
CLI client for the copyrightupdate module.

Parses the given files and updates the copyright string.

If no input files are given, the program acts as a filter from STDIN to STDOUT.
"""

import argparse
import os
import sys

import copyrightupdate

__docformat__ = "restructuredtext en"

def main():
    """
    Parses command line options and checks all given files.
    """
    options = _parse_args()

    if len(options.files) > 0:
        for f in options.files:
            # Ignore nonexistant files.
            if not os.path.isfile(f):
                continue

            copyrightupdate.process_file(f, options.linecount)

    else:
        lines = sys.stdin.readlines()

        if len(lines) > 0:
            copyrightupdate.process_lines(lines, len(lines))

            for line in lines:
                sys.stdout.write(line)


def _parse_args():
    """
    Parses the command line arguments.

    :return: Namespace with arguments.
    :rtype: Namespace
    """
    parser = argparse.ArgumentParser(description="Updates the copyright dates in source code.")
    parser.add_argument('files', metavar='file', type=str, nargs='*',
                        help='Files to check.')
    parser.add_argument("-n", dest="linecount", type=int, default=5,
                        help="Number of lines to check from the beginning of the document. [default %(default)s]")

    return parser.parse_args()


if __name__ == "__main__":
    main()
